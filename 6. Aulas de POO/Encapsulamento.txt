Encapsulamento

O encapsulamento serve para proteger uma classe e definir limites para alteração de suas propriedades.

Serve para ocultar seu comportamento e expor somente o necessário.

Exemplo: classe (Retangulo) comprimento e largura (double)

sinal de menos: privado

sinal de mais: publico

** On Program.cs**

using System;
using ExemploPOO.Models;

namespace ExemploPOO
{
    class Program
    {
        static void Main(string[] args)
        {
            //valores válidos
            Retangulo r =  new Retangulo();
            r.DefinirMedidas(30, 30);
            System.Console.WriteLine ($"Área: {r.ObterArea()}");;

            //valores inválidos
            Retangulo r2 =  new Retangulo();
            r.DefinirMedidas(0, 0);
            System.Console.WriteLine ($"Área: {r2.ObterArea()}");;


**Retangulo.cs**

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace ExemploPOO.Models
{
    public class Retangulo
    {
        private double comprimento;
        private double largura;
        private bool valido;


        public void DefinirMedidas(double comprimento, double largura)
        {
            if (comprimento > 0 && largura > 0)
            {
                this.comprimento = comprimento;
                this.largura = largura;
                valido = true;

            }
            else
            {
                System.Console.WriteLine("Valores inválidos");
            }
    
        }

        public double ObterArea()
        {
            if (valido)
            {
                return comprimento * largura;

            }
            else
            {
                System.Console.WriteLine("Preencha valores válidos");
                return 0;
            }
        }
    }
}


